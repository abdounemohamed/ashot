<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DepositRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DepositRepository extends EntityRepository
{
    
    public function findDepositsByInputFields($currency_id = null, $deposit_days = null, $deposit_months = null, $deposit_min = null, $customer_type = null){
        
        $deposit_day_where = 'dd.depositDayMin <= :deposit_days AND dd.depositDayMax >= :deposit_days';
        $deposit_month_where = 'dd.depositDayMonth = :deposit_months';
        
        $deposit_duration_where = $deposit_day_where;
        if($deposit_months !== NULL){ $deposit_duration_where = $deposit_month_where; }
        
        $em = $this->getEntityManager();
        $query = $em->createQuery(
                'SELECT 
                    b.bankId,
                    b.bankTitle,
                    b.bankSlug,
                    d.depositId,
                    d.currencyId,
                    d.depositCustomerType,
                    d.depositOrder,
                    d.depositMin,
                    dd.depositDayMin,
                    dd.depositDayMax,
                    dd.depositDayMonth,
                    ddd.depositDepositDayPercent,
                    d.depositTitle,
                    d.depositDescription,
                    d.depositUpdateDate,
                    d.depositLink
                FROM
                    AppBundle:Deposit d
                    INNER JOIN AppBundle:Bank b WITH (d.bankId = b.bankId)
                    INNER JOIN AppBundle:DepositsDepositDays ddd WITH (ddd.depositId = d.depositId)
                    INNER JOIN AppBundle:DepositDay dd WITH (dd.depositDayId = ddd.depositDayId)
                WHERE
                    d.depositCustomerType = :customer_type AND
                    d.currencyId = :currency_id AND
                    d.depositMin <= :deposit_min AND
                    (
                        d.depositMax IS NULL OR
                        d.depositMax >= :deposit_min
                    )
                    AND
                    ('.$deposit_duration_where.')
                ORDER BY
                    ddd.depositDepositDayPercent  DESC'
            );

            $params = $query
                    ->setParameter('customer_type', $customer_type)
                    ->setParameter('currency_id', $currency_id)
                    ->setParameter('deposit_min', $deposit_min)
                    ;
            
            if($deposit_days !== null){ $query->setParameter('deposit_days', $deposit_days); }
            if($deposit_months !== null){ $query->setParameter('deposit_months', $deposit_months); }
            
//            $sql = $query->getSQL();
//            print_r($sql);
//            exit();
            
            $result = $query->getResult();

            return $result;
        
    }
    
}
